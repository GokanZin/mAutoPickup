plugins {
    id 'java'
}

group = 'br.com.gokan'
version = '0.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

}

dependencies {
//    compileOnly files("C:/Users/Pedro/Desktop/Projeto_Plugins_Vender/Dependencias/craftbukkit-1.7.10-R.jar")
//    compileOnly 'org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT' // The Spigot API with no shadowing. Requires the OSS repo.

//    compileOnly files("C:/Users/Pedro/Desktop/Projeto_Plugins_Vender/Dependencias/paper20.jar")
    compileOnly files("C:/Users/Pedro/Desktop/Projeto_Plugins_Vender/Dependencias/spigot-1.12.2.jar")
    compileOnly files("C:/Users/Pedro/Desktop/Projeto_Plugins_Vender/Dependencias/worldguard-6.2.jar")
    compileOnly files("C:/Users/Pedro/Desktop/Projeto_Plugins_Vender/Dependencias/worldedit-bukkit-6.1.9.jar")
    compileOnly files('C:/Users/Pedro/Desktop/Projeto_Plugins_Vender/Dependencias/Vault (1).jar')
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}



jar {
    archiveFileName.set("C:/Users/Pedro/Desktop/Projeto_Plugins_Vender/server/plugins/mAutoPickup.jar")

}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
